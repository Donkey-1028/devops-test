# This file is a template, and might need editing before it works on your project.
# Official framework image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python
image: python:3.7

stages:
  - lint
  - test
  - build
  - push

# This folder is cached between builds
# http://docs.gitlab.com/ce/ci/yaml/README.html#cache
cache:
  paths:
    - ~/.cache/pip/

# This is a basic example for a gem or script which doesn't use
# services such as redis or postgres
before_script:
  - python -V  # Print out python version for debugging
  # Uncomment next line if your Django app needs a JS runtime:
  # - apt-get update -q && apt-get install nodejs -yqq
  - pip install -r requirements.txt

# To get Django tests to work you may need to create a settings file using
# the following DATABASES:
#
# DATABASES = {
#     'default': {
#        'ENGINE': 'django.db.backends.postgresql_psycopg2',
#        'NAME': 'ci',
#        'USER': 'postgres',
#        'PASSWORD': 'postgres',
#        'HOST': 'postgres',
#        'PORT': '5432',
#    },
# }
#
# and then adding `--settings app.settings.ci` (or similar) to the test command


py_lint:
  stage: lint
  script:
    - pylint devops
  tags:
    - default-docker
  except:
    - master
  allow_failure: true

py_test:
  stage: test
  services:
    - mysql:5.7
  variables:
    MYSQL_ROOT_PASSWORD: "testpassword"
    MYSQL_DATABASE: "devops"
  script:
    - python manage.py test
  tags:
    - default-docker
  except:
    - master


test:
  stage: lint
  services:
    - name: mysql:5.7
      command:
        - echo "mysql test"
  before_script:
    - echo "owasp test"
  script:
    - echo "test"
  tags:
    - default-docker

# owasp를 통한 code 취약성 검사 추가

docker_build:
  stage: build
  before_script:
    - docker --version
  script:  
    - docker build -t "$CI_REGISTRY_IMAGE" .
  tags:
    - default-shell
  only:
    - master

docker_push:
  stage: push
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY 
  script:
    - docker push "$CI_REGISTRY_IMAGE"
  tags:
    - default-shell
  only:
    - master
